import { MODE } from './constants';
import { RevolutPaymentsVersionLoader } from './versionLoader';
import { loadRevolutCheckout } from './loader';
var loadedPaymentInstance = null;
export function RevolutPaymentsLoader(token, mode, locale) {
    if (mode === void 0) { mode = RevolutPaymentsLoader.mode; }
    if (loadedPaymentInstance) {
        var instance = loadedPaymentInstance({ publicToken: token, locale: locale });
        return Promise.resolve(instance);
    }
    return RevolutPaymentsVersionLoader(mode)
        .then(function (version) { return loadRevolutCheckout(version, mode, 'RevolutPayments'); })
        .then(function (revolutCheckout) {
        loadedPaymentInstance = revolutCheckout.payments;
        return revolutCheckout.payments({ publicToken: token, locale: locale });
    });
}
RevolutPaymentsLoader.mode = MODE.PRODUCTION;
